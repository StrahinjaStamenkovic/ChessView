// <auto-generated />
using System;
using BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(ChessContext))]
    [Migration("20210322183750_V2")]
    partial class V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackEnd.Models.Archive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Archive");
                });

            modelBuilder.Entity("BackEnd.Models.ChessPlayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("Age");

                    b.Property<int>("Elo")
                        .HasColumnType("int")
                        .HasColumnName("Elo");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LastName");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Name");

                    b.Property<string>("Nationality")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nationality");

                    b.HasKey("ID");

                    b.ToTable("ChessPlayer");
                });

            modelBuilder.Entity("BackEnd.Models.GameInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlackPlayerID")
                        .HasColumnType("int")
                        .HasColumnName("BlackPlayerID");

                    b.Property<int?>("GameArchiveID")
                        .HasColumnType("int");

                    b.Property<string>("PGN")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("PGN");

                    b.Property<int>("WhitePlayerID")
                        .HasColumnType("int")
                        .HasColumnName("WhitePlayerID");

                    b.HasKey("ID");

                    b.HasIndex("GameArchiveID");

                    b.ToTable("GameInfo");
                });

            modelBuilder.Entity("BackEnd.Models.GameInfo", b =>
                {
                    b.HasOne("BackEnd.Models.Archive", "GameArchive")
                        .WithMany("Games")
                        .HasForeignKey("GameArchiveID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GameArchive");
                });

            modelBuilder.Entity("BackEnd.Models.Archive", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
